\s*\Qcanvas\E(.*)
canvas xSize ySize String-For-Heading-Without-Spaces
\s*\Qpen\E(.*)
pen r g bNEWLINEall objects created afterwards will have this color. Default color black
\s*\QnewObj\E(.*)
newObj type xSize ySizeNEWLINEThe type is zero for square 1 for circle x and y size
\s*\QmoveObj\E(.*)
moveObj WhichObj xCoordinate yCoordinate
\s*\Qdef\E(.*)
def string replacement1 string2 replacement2 etc...NEWLINEOnly can be written on the second line
\s*print(.*)
print StringNEWLINEprintLine StringNEWLINEprintInt xNEWLINEprintIntNoLine xNEWLINE//prints the value of x as an intNEWLINEprintChar xNEWLINEprints the char value of x
\s*GOTO(.*)
GOTO a certain lbl
\s*lbl(.*)
lblWHATEVER creates a labeled named whataver
\s*if(.*)
if x lblToGoTo goes to the label iff x > 0
(.*)[\Q=+-*%/^~|\E](.*)
assignment operators x + y adds y to x and stores it back in x.NEWLINEVariables occupy the first few spots on the heap
\s*set(.*)
set heapSpot value
\s*[0-9]+
Explicit heap declaration optional on first line
refresh
Refresh the screen after any changes have been made